{
  "openapi": "3.0.0",
  "info": {
    "title": "Caution Companion",
    "description": "APIs for Caution Companion",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://caution-companion.onrender.com/",
      "description": "Production server (uses live data)"
    },
    {
      "url": "http://localhost:3500/",
      "description": "Local Development server (uses test data)"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Returns the Health of the Server",
        "security": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "status": false,
                  "message": "server is down"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Creates a new User.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email Already Exists | Client Error | Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login User In.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              },
              "example": {
                "email": "susanrice@gmail.com",
                "password": "secret-password"
              }
            }
          },
          "required": true
        },
        "security": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "minLength": 1
                        },
                        "refresh_token": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email Not Verified | Password Not Correct | Client Error | Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Current User",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports": {
      "post": {
        "tags": ["Reports"],
        "summary": "Creates an Emergency Report ",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReportByReportIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/latest": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get latest Emergency Reports ",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestReportsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": ["Reports"],
        "summary": "Returns an Emergency Report by id ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the report",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReportByReportIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "User gave a bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SuccessWithOnlyMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "default": true
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "default": false
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SingleReportResponse": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "incident_type": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              }
            },
            "required": ["longitude", "latitude"]
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "incident_type",
          "location",
          "description",
          "created_at",
          "updated_at"
        ],
        "example": {
          "id": "d4d0e3ff-6395-4a50-90a9-146cfa75cba1",
          "incident_type": "d4d0e3ff-6395-4a50-90a9-146cfa75cba1",
          "location": {
            "longitude": "12.099",
            "latitude": "10.099"
          },
          "description": "fire outbreak at Car Park",
          "created_at": "2024-06-05T21:31:15.342491Z",
          "updated_at": "2024-06-05T21:31:15.342491Z"
        }
      },
      "GetReportByReportIdResponse": {
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/SingleReportResponse"
          }
        },
        "required": ["status", "message", "data"]
      },
      "GetLatestReportsResponse": {
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "rows": {
                "type": "number"
              },
              "page": {
                "type": "number"
              },
              "items": {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "$ref": "#/components/schemas/SingleReportResponse"
                }
              }
            },
            "required": ["rows", "page", "items"],
            "example": {
              "rows": 1,
              "page": 1,
              "items": [
                {
                  "id": "d4d0e3ff-6395-4a50-90a9-146cfa75cba1",
                  "incident_type": "d4d0e3ff-6395-4a50-90a9-146cfa75cba1",
                  "location": {
                    "longitude": "12.099",
                    "latitude": "10.099"
                  },
                  "description": "fire outbreak at Car Park",
                  "created_at": "2024-06-05T21:31:15.342491Z",
                  "updated_at": "2024-06-05T21:31:15.342491Z"
                }
              ]
            }
          }
        },
        "required": ["status", "message", "data"]
      },

      "CreateNewReportRequest": {
        "description": "",
        "type": "object",
        "properties": {
          "incident_type": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              }
            },
            "required": ["longitude", "latitude"]
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["incident_type", "location", "description"],
        "example": {
          "incident_type": "robbery",
          "location": {
            "longitude": "12.9",
            "latitude": "10.9"
          },
          "description": "robbery at ICT car park"
        }
      },
      "HealthCheckResponse": {
        "title": "HealthCheckResponse",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["status", "message"],
        "example": {
          "status": true,
          "message": "server is healthy"
        }
      },
      "GetCurrentUserResponse": {
        "title": "GetCurrentUserResponse",
        "description": "",
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "minLength": 1
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1
              },
              "email": {
                "type": "string",
                "minLength": 1
              },
              "first_name": {
                "type": "string",
                "minLength": 1
              },
              "last_name": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": ["id", "email", "first_name", "last_name"]
          }
        },
        "required": ["status", "message", "data"]
      },
      "RegisterUserRequest": {
        "title": "RegisterUserRequest",
        "required": ["email", "password", "first_name", "last_name"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        },
        "example": {
          "email": "susanrice@gmail.com",
          "password": "secret-password",
          "first_name": "susan",
          "last_name": "rice"
        }
      },
      "LoginUserRequest": {
        "title": "LoginUserRequest",
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "email": "susanrice@gmail.com",
          "password": "secret-password"
        }
      }
    }
  }
}
